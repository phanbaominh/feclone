# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/gosu/all/gosu.rbi
#
# gosu-0.15.2

module Gosu
  def _release_all_openal_resources(*arg0); end
  def angle(*arg0); end
  def angle_diff(*arg0); end
  def available_height(*arg0); end
  def available_width(*arg0); end
  def button_down?(*arg0); end
  def button_id_to_char(*arg0); end
  def char_to_button_id(*arg0); end
  def clip_to(*arg0); end
  def default_font_name(*arg0); end
  def degrees_to_radians(*arg0); end
  def disown_TextInput(*arg0); end
  def disown_Window(*arg0); end
  def distance(*arg0); end
  def draw_line(*arg0); end
  def draw_quad(*arg0); end
  def draw_rect(*arg0); end
  def draw_triangle(*arg0); end
  def enable_undocumented_retrofication(*arg0); end
  def flush(*arg0); end
  def fps(*arg0); end
  def language(*arg0); end
  def milliseconds(*arg0); end
  def normalize_angle(*arg0); end
  def offset_x(*arg0); end
  def offset_y(*arg0); end
  def radians_to_degrees(*arg0); end
  def random(*arg0); end
  def record(*arg0); end
  def render(*arg0); end
  def rotate(*arg0); end
  def scale(*arg0); end
  def screen_height(*arg0); end
  def screen_width(*arg0); end
  def self._release_all_openal_resources(*arg0); end
  def self.angle(*arg0); end
  def self.angle_diff(*arg0); end
  def self.available_height(*arg0); end
  def self.available_width(*arg0); end
  def self.button_down?(*arg0); end
  def self.button_id_to_char(*arg0); end
  def self.char_to_button_id(*arg0); end
  def self.clip_to(*arg0); end
  def self.const_missing(const_name); end
  def self.default_font_name(*arg0); end
  def self.degrees_to_radians(*arg0); end
  def self.deprecate(klass, name, repl); end
  def self.deprecate_const(name, repl); end
  def self.deprecation_caller; end
  def self.deprecation_message(klass_or_full_message, name = nil, repl = nil); end
  def self.disown_TextInput(*arg0); end
  def self.disown_Window(*arg0); end
  def self.distance(*arg0); end
  def self.draw_line(*arg0); end
  def self.draw_quad(*arg0); end
  def self.draw_rect(*arg0); end
  def self.draw_triangle(*arg0); end
  def self.enable_undocumented_retrofication(*arg0); end
  def self.flush(*arg0); end
  def self.fps(*arg0); end
  def self.gl(z = nil, &block); end
  def self.language(*arg0); end
  def self.milliseconds(*arg0); end
  def self.normalize_angle(*arg0); end
  def self.offset_x(*arg0); end
  def self.offset_y(*arg0); end
  def self.radians_to_degrees(*arg0); end
  def self.random(*arg0); end
  def self.record(*arg0); end
  def self.render(*arg0); end
  def self.rotate(*arg0); end
  def self.scale(*arg0); end
  def self.screen_height(*arg0); end
  def self.screen_width(*arg0); end
  def self.transform(*arg0); end
  def self.translate(*arg0); end
  def self.unsafe_gl(*arg0); end
  def transform(*arg0); end
  def translate(*arg0); end
  def unsafe_gl(*arg0); end
end
class Gosu::Color
  def ==(*arg0); end
  def _deprecated_abgr(*arg0); end
  def _deprecated_bgr(*arg0); end
  def abgr(*args, &block); end
  def alpha(*arg0); end
  def alpha=(*arg0); end
  def argb(*arg0); end
  def bgr(*args, &block); end
  def blue(*arg0); end
  def blue=(*arg0); end
  def dup(*arg0); end
  def eql?(other); end
  def gl(*arg0); end
  def green(*arg0); end
  def green=(*arg0); end
  def hash(*arg0); end
  def hue(*arg0); end
  def hue=(*arg0); end
  def initialize(*arg0); end
  def inspect(*arg0); end
  def red(*arg0); end
  def red=(*arg0); end
  def saturation(*arg0); end
  def saturation=(*arg0); end
  def self.argb(*arg0); end
  def self.from_ahsv(*arg0); end
  def self.from_hsv(*arg0); end
  def self.rgb(*arg0); end
  def self.rgba(*arg0); end
  def to_i(*arg0); end
  def value(*arg0); end
  def value=(*arg0); end
end
class Gosu::Font
  def []=(*arg0); end
  def _deprecated_draw(*arg0); end
  def _deprecated_draw_rel(*arg0); end
  def _deprecated_draw_rot(markup, x, y, z, angle, scale_x = nil, scale_y = nil, c = nil, mode = nil); end
  def draw(*args, &block); end
  def draw_markup(*arg0); end
  def draw_markup_rel(*arg0); end
  def draw_rel(*args, &block); end
  def draw_rot(*args, &block); end
  def draw_text(*arg0); end
  def draw_text_rel(*arg0); end
  def flags(*arg0); end
  def height(*arg0); end
  def initialize(*arg0); end
  def markup_width(*arg0); end
  def name(*arg0); end
  def set_image(*arg0); end
  def text_width(*arg0); end
end
class Gosu::GLTexInfo
  def bottom(*arg0); end
  def bottom=(*arg0); end
  def initialize(*arg0); end
  def left(*arg0); end
  def left=(*arg0); end
  def right(*arg0); end
  def right=(*arg0); end
  def tex_name(*arg0); end
  def tex_name=(*arg0); end
  def top(*arg0); end
  def top=(*arg0); end
end
class Gosu::Image
  def columns(*arg0); end
  def draw(x = nil, y = nil, z = nil, scale_x: nil, scale_y: nil); end
  def draw_as_quad(*arg0); end
  def draw_mod(*arg0); end
  def draw_rot(*arg0); end
  def gl_tex_info(*arg0); end
  def height(*arg0); end
  def initialize(*args); end
  def initialize_without_window(*arg0); end
  def insert(*arg0); end
  def inspect(*arg0); end
  def rows(*arg0); end
  def save(*arg0); end
  def self.from_blob(width, height, rgba = nil); end
  def self.from_markup(*args); end
  def self.from_text(*args); end
  def self.from_text_without_window(*arg0); end
  def self.load_tiles(*arg0); end
  def subimage(*arg0); end
  def to_blob(*arg0); end
  def width(*arg0); end
end
class Gosu::Channel
  def current_channel(*arg0); end
  def pan=(*arg0); end
  def pause(*arg0); end
  def paused?(*arg0); end
  def playing?(*arg0); end
  def resume(*arg0); end
  def speed=(*arg0); end
  def stop(*arg0); end
  def volume=(*arg0); end
end
class Gosu::Sample
  def initialize(*args); end
  def initialize_without_window(*arg0); end
  def play(*arg0); end
  def play_pan(*arg0); end
end
class Gosu::Song
  def initialize(*args); end
  def initialize_without_window(*arg0); end
  def pause(*arg0); end
  def paused?(*arg0); end
  def play(*arg0); end
  def playing?(*arg0); end
  def self.current_song(*arg0); end
  def self.update(*arg0); end
  def stop(*arg0); end
  def volume(*arg0); end
  def volume=(*arg0); end
end
class Gosu::TextInput
  def caret_pos(*arg0); end
  def caret_pos=(*arg0); end
  def delete_backward(*arg0); end
  def delete_forward(*arg0); end
  def filter(*arg0); end
  def initialize(*arg0); end
  def insert_text(*arg0); end
  def selection_start(*arg0); end
  def selection_start=(*arg0); end
  def text(*arg0); end
  def text=(*arg0); end
end
class Gosu::Window
  def _deprecated_set_mouse_position(*arg0); end
  def _tick(*arg0); end
  def button_down(*arg0); end
  def button_down?(*args, &block); end
  def button_id_to_char(*args, &block); end
  def button_up(*arg0); end
  def caption(*arg0); end
  def caption=(*arg0); end
  def char_to_button_id(*args, &block); end
  def clip_to(*args, &block); end
  def close!(*arg0); end
  def close(*arg0); end
  def draw(*arg0); end
  def draw_line(*args, &block); end
  def draw_quad(*args, &block); end
  def draw_rect(*args, &block); end
  def draw_triangle(*args, &block); end
  def drop(*arg0); end
  def flush(*args, &block); end
  def fullscreen=(*arg0); end
  def fullscreen?(*arg0); end
  def gl(*args, &block); end
  def height(*arg0); end
  def height=(*arg0); end
  def initialize(width, height, *args); end
  def initialize_without_hash(*arg0); end
  def lose_focus(*arg0); end
  def mouse_x(*arg0); end
  def mouse_x=(*arg0); end
  def mouse_y(*arg0); end
  def mouse_y=(*arg0); end
  def needs_cursor?(*arg0); end
  def needs_redraw?(*arg0); end
  def protected_button_down(*args); end
  def protected_button_up(*args); end
  def protected_draw(*args); end
  def protected_draw_2; end
  def protected_lose_focus(*args); end
  def protected_needs_cursor?(*args); end
  def protected_needs_redraw?(*args); end
  def protected_update(*args); end
  def record(*args, &block); end
  def release_memory(*arg0); end
  def resizable?(*arg0); end
  def rotate(*args, &block); end
  def scale(*args, &block); end
  def self.button_id_to_char(id); end
  def self.char_to_button_id(ch); end
  def set_mouse_position(*args, &block); end
  def show; end
  def show_internal(*arg0); end
  def text_input(*arg0); end
  def text_input=(*arg0); end
  def tick; end
  def transform(*args, &block); end
  def translate(*args, &block); end
  def update(*arg0); end
  def update_interval(*arg0); end
  def update_interval=(*arg0); end
  def width(*arg0); end
  def width=(*arg0); end
end
class Numeric
  def degrees_to_radians; end
  def gosu_to_radians; end
  def radians_to_degrees; end
  def radians_to_gosu; end
end
class Gosu::Image::BlobHelper < Struct
  def columns; end
  def columns=(_); end
  def rows; end
  def rows=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.members; end
  def self.new(*arg0); end
  def to_blob; end
  def to_blob=(_); end
end
class Gosu::ImmutableColor < Gosu::Color
  def alpha=(*arg0); end
  def blue=(*arg0); end
  def green=(*arg0); end
  def hue=(*arg0); end
  def red=(*arg0); end
  def saturation=(*arg0); end
  def value=(*arg0); end
end
module Gosu::Button
end
